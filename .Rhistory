kable_styling(latex_options = c("striped", "hold_position")
knitr::opts_chunk$set(warning=FALSE, message=FALSE, echo=TRUE, fig.align = 'center')
library(tidyverse)
library(readr)
library(readxl)
library(dplyr)
library(knitr)
library(kableExtra)
library(plotly)
library(e1071)
library(extrafont)
loadfonts(device = "win")
SP <- read.csv("StudentsPerformance G5-G6.xlsx")
#Seleccion de columnas (variables) a estudiar
variables <-select(SP, "parental level of education", "lunch", "math score", "reading score", "writing score")
# crear intervalos para Desempeño
SP2$Desempeño_Intervalos <- cut(SP2$Desempeño,
breaks = c(9, 32, 55, 78, 100),
right = FALSE,
include.lowest = TRUE,
labels = c("[9,32]", "[32,55]", "[55,78]", "[78,100]"))
knitr::opts_chunk$set(warning=FALSE, message=FALSE, echo=TRUE, fig.align = 'center')
library(tidyverse)
library(readr)
library(readxl)
library(dplyr)
library(knitr)
library(kableExtra)
library(plotly)
library(e1071)
library(extrafont)
loadfonts(device = "win")
SP <- read.csv("StudentsPerformance G5-G6.xlsx")
#Seleccion de columnas (variables) a estudiar
variables <-select(SP, "parental level of education", "lunch", "math score", "reading score", "writing score")
knitr::opts_chunk$set(warning=FALSE, message=FALSE, echo=TRUE, fig.align = 'center')
library(tidyverse)
library(readr)
library(readxl)
library(dplyr)
library(knitr)
library(kableExtra)
library(plotly)
library(e1071)
library(extrafont)
loadfonts(device = "win")
SPb <- read.csv("StudentsPerformance1.csv")
SP <- read.csv("StudentsPerformance G5-G6.xlsx")
#Seleccion de columnas (variables) a estudiar
variables <-select(SP, "parental level of education", "lunch", "math score", "reading score", "writing score")
knitr::opts_chunk$set(warning=FALSE, message=FALSE, echo=TRUE, fig.align = 'center')
library(tidyverse)
library(readr)
library(readxl)
library(dplyr)
library(knitr)
library(kableExtra)
library(plotly)
library(e1071)
library(extrafont)
loadfonts(device = "win")
SP <- read.csv("StudentsPerformance G5-G6.xlsx")
#Seleccion de columnas (variables) a estudiar
variables <-select(SP, "parental level of education", "lunch", "math score", "reading score", "writing score")
# crear intervalos para Desempeño
variables$Desempeño_Intervalos <- cut(variables$Desempeño,
breaks = c(9, 32, 55, 78, 100),
right = FALSE,
include.lowest = TRUE,
labels = c("[9,32]", "[32,55]", "[55,78]", "[78,100]"))
# crear la tabla de frecuencias bivariante a
tabla_frecuenciasa <- table(variables$parental_level_of_education, variables$Desempeño_Intervalos)
# crear la tabla de frecuencias bivariante a
tabla_frecuenciasa <- table(variables$'parental level of education', variables$Desempeño_Intervalos)
tabla_frecuenciasa <- addmargins(tabla_frecuenciasa)
tabla_frecuenciasa_df <- as.data.frame.matrix(tabla_frecuenciasa) # Convertir la tabla a un data frame para formatearla
# Crear la tabla formateada
kable(tabla_frecuenciasa_df, caption = "Desempeño En Comparación al Nivel Educativo de los Padres", format = "latex", booktabs = TRUE) %>%
kable_styling(latex_options = c("striped", "hold_position"))
# Reducir el espacio entre las tablas
invisible(capture.output(
cat("\\vspace{-10mm}")
))
# crear la tabla de frecuencias bivariante a
tabla_frecuenciasa <- table(variables$'parental level of education', variables$Desempeño_Intervalos)
tabla_frecuenciasa <- addmargins(tabla_frecuenciasa)
tabla_frecuenciasa_df <- as.data.frame.matrix(tabla_frecuenciasa) # Convertir la tabla a un data frame para formatearla
# Crear la tabla formateada
kable(tabla_frecuenciasa_df, caption = "Desempeño En Comparación al Nivel Educativo de los Padres", format = "latex", booktabs = TRUE) %>%
kable_styling(latex_options = c("striped", "hold_position"))
# Reducir el espacio entre las tablas
invisible(capture.output(
cat("\\vspace{-10mm}")
))
View(tabla_frecuenciasa_df)
# Calcular cuartiles por nivel educativo de los padres
cuartiles <- variables %>%
group_by(`parental level of education`) %>%  # Backticks para nombres con espacios
summarise(
Q1 = round(quantile(Desempeño, 0.25), 2),
Q2 = round(quantile(Desempeño, 0.50), 2),
Q3 = round(quantile(Desempeño, 0.75), 2))
kable(cuartiles, caption = "Cuartiles del Desempeño por Nivel Educativo de los Padres") %>%
kable_styling(latex_options = c("striped", "hold_position"))
knitr::opts_chunk$set(warning=FALSE, message=FALSE, echo=TRUE, fig.align = 'center')
library(tidyverse)
library(readr)
library(readxl)
library(dplyr)
library(knitr)
library(kableExtra)
library(plotly)
library(e1071)
library(extrafont)
loadfonts(device = "win")
SP <- read.csv("StudentsPerformance G5-G6.xlsx")
#Seleccion de columnas (variables) a estudiar
variables <-select(SP, "parental level of education", "lunch", "math score", "reading score", "writing score")
knitr::opts_chunk$set(warning=FALSE, message=FALSE, echo=TRUE, fig.align = 'center')
library(tidyverse)
library(readr)
library(readxl)
library(dplyr)
library(knitr)
library(kableExtra)
library(plotly)
library(e1071)
library(extrafont)
loadfonts(device = "win")
SP <- read.csv("StudentsPerformance G5-G6.xlsx")
#Seleccion de columnas (variables) a estudiar
variables <-select(SP, 'parental level of education', 'lunch', 'math score', 'reading score', 'writing score')
knitr::opts_chunk$set(warning=FALSE, message=FALSE, echo=TRUE, fig.align = 'center')
library(tidyverse)
library(readr)
library(readxl)
library(dplyr)
library(knitr)
library(kableExtra)
library(plotly)
library(e1071)
library(extrafont)
loadfonts(device = "win")
SP <- read_xls("StudentsPerformance G5-G6.xlsx")
# Calcular cuartiles por nivel educativo de los padres
cuartiles <- variables %>%
group_by(`parental level of education`) %>%  # Backticks para nombres con espacios
summarise(
Q1 = round(quantile(Desempeño, 0.25), 2),
Q2 = round(quantile(Desempeño, 0.50), 2),
Q3 = round(quantile(Desempeño, 0.75), 2))
kable(cuartiles, caption = "Cuartiles del Desempeño por Nivel Educativo de los Padres") %>%
kable_styling(latex_options = c("striped", "hold_position"))
# Grafico de cajas
ggplot(SP, aes(
x = `parental level of education`,
y = Desempeño,
fill = `parental level of education`)) +
geom_boxplot() +
stat_summary(fun = "mean", geom = "point") + labs(
title = "Desempeño en función del Nivel Educativo de los Padres",
x = "Nivel Educativo de los Padres",
y = "Desempeño",
fill = "") + theme(
text = element_text(family = "serif"),
plot.title = element_text(hjust = 0.5),
axis.text.x = element_blank(),
legend.position = "bottom",
legend.title = element_text(hjust = 0.5))
# Grafico de cajas
ggplot(variables, aes(
x = `parental level of education`,
y = Desempeño,
fill = `parental level of education`)) +
geom_boxplot() +
stat_summary(fun = "mean", geom = "point") + labs(
title = "Desempeño en función del Nivel Educativo de los Padres",
x = "Nivel Educativo de los Padres",
y = "Desempeño",
fill = "") + theme(
text = element_text(family = "serif"),
plot.title = element_text(hjust = 0.5),
axis.text.x = element_blank(),
legend.position = "bottom",
legend.title = element_text(hjust = 0.5))
estadisticos_basicos <- variables %>%
group_by(`parental level of education`) %>%
summarise(
Media = round(mean(Desempeño), 2),
D.Estandar = round(sd(Desempeño), 2),
C.Variacion = round(((D.Estandar / Media) * 100), 2),
Asimetria = round(skewness(Desempeño), 2),
Kurtosis = round(kurtosis(Desempeño), 2))
# Mostrar
kable(estadisticos_basicos, caption = "Estadisticas Basicas del Desempeño por Nivel Educativo de los Padres", format = "latex", booktabs = TRUE) %>%
kable_styling(latex_options = c("striped", "hold_position"))
View(estadisticos_basicos)
# Crear la tabla de frecuencias bivariante b
tabla_frecuenciasb <- table(variables$lunch, variables$Desempeño_Intervalos)
tabla_frecuenciasb <- addmargins(tabla_frecuenciasb)   # Añadir las frecuencias marginales
tabla_frecuenciasb_df <- as.data.frame.matrix(tabla_frecuenciasb) # Convertir la tabla a un data frame para formatearla
# Mostrar
kable(tabla_frecuenciasb_df, caption = "Desempeño En Comparación al Tipo de Almuerzo", format = "latex", booktabs = TRUE) %>%
kable_styling(latex_options = c("striped", "hold_position"))
View(tabla_frecuenciasb_df)
# Calcular cuartiles por nivel educativo de los padres
cuartiles2 <- variables %>%
group_by(lunch) %>%
summarise(
Q1 = round(quantile(Desempeño, 0.25), 2),
Q2 = round(quantile(Desempeño, 0.50), 2),
Q3 = round(quantile(Desempeño, 0.75), 2))
# Mostrar
kable(cuartiles2, caption = "Cuartiles del Desempeño Calidad de Almuerzo", format = "latex", booktabs = TRUE) %>%
kable_styling(latex_options = c("striped", "hold_position"))
View(cuartiles2)
# Calcular cuartiles por nivel educativo de los padres
cuartiles2 <- variables %>%
group_by(`lunch`) %>%
summarise(
Q1 = round(quantile(Desempeño, 0.25), 2),
Q2 = round(quantile(Desempeño, 0.50), 2),
Q3 = round(quantile(Desempeño, 0.75), 2))
# Mostrar
kable(cuartiles2, caption = "Cuartiles del Desempeño Calidad de Almuerzo", format = "latex", booktabs = TRUE) %>%
kable_styling(latex_options = c("striped", "hold_position"))
View(cuartiles2)
# Grafico de cajas
ggplot(variables, aes(x = `lunch`, y = `Desempeño`, fill = `lunch`)) +
geom_boxplot() +
stat_summary(fun = "mean", geom = "point") + labs(
title = "Desempeño en función de la Calidad de los Almuerzos",
x = "Almuerzo",
y = "Desempeño",
fill = "") + theme(
text = element_text(family = "serif"),
plot.title = element_text(hjust = 0.5),
axis.text.x = element_blank(),
legend.position = "bottom",
legend.title = element_text(hjust = 0.5))
estadisticos_basicos2 <- variables %>%
group_by(lunch) %>%
summarise(
Media = round(mean(Desempeño), 2),
D.Estandar = round(sd(Desempeño), 2),
C.Variacion = round(((D.Estandar / Media) * 100), 2),
Asimetria = round(skewness(Desempeño), 2),
Kurtosis = round(kurtosis(Desempeño, type = 1), 2))
# Mostrar
kable(estadisticos_basicos2, caption = "Estadisticas Basicas del Desempeño por Calidad de Almuerzo", format = "latex", booktabs = TRUE) %>%
kable_styling(latex_options = c("striped", "hold_position"))
View(estadisticos_basicos2)
# Grafico de cajas
ggplot(variables, aes(x = `parental level of education`, y = Desempeño, fill = `parental level of education`, colour = lunch)) +
geom_boxplot() +
stat_summary(fun = "mean", geom = "point", position = position_dodge(width = 0.75)) + labs(
title = "Desempeño en función del Nivel Educativo de los Padres",
x = "Nivel Educativo de los Padres",
y = "Desempeño",
fill = "",
colour = "") + theme(
text = element_text(family = "serif"),
plot.title = element_text(hjust = 0.5),
axis.text.x = element_blank(),
legend.position = "bottom",
legend.title = element_text(hjust = 0.5)) +
scale_colour_manual(values = c("standard" = "blue", "free/reduced" = "red"))
knitr::opts_chunk$set(warning=FALSE, message=FALSE, echo=TRUE, fig.align = 'center')
#Carga de paquetes necesarios
library(tidyverse)
library(readxl)
library(dplyr)
library(knitr)
library(kableExtra)
library(plotly)
library(e1071)
library(extrafont)
loadfonts(device = "win")
#Lectura de base de datos
SP <- read_excel("StudentsPerformance G5-G6.xlsx")
#Seleccion de columnas (variables) a estudiar
variables <-select(SP, "parental level of education", "lunch", "math score", "reading score", "writing score")
variables <- variables %>%
mutate(Desempeño = round((`math score` + `reading score` + `writing score`) / 3,2 ))
#Seleccion de las notas academicas
notas <- select(SP, "math score", "reading score", "writing score")
notas <- notas %>%
mutate(Desempeño = round((`math score` + `reading score` + `writing score`) / 3,2 ))
# Grafico de cajas
ggplot(variables, aes(x = `lunch`, y = `Desempeño`, fill = `lunch`)) +
geom_boxplot() +
stat_summary(fun = "mean", geom = "point") + labs(
title = "Desempeño en función de la Calidad de los Almuerzos",
x = "Almuerzo",
y = "Desempeño",
fill = "") + theme(
text = element_text(family = "serif"),
plot.title = element_text(hjust = 0.5),
axis.text.x = element_blank(),
legend.position = "bottom",
legend.title = element_text(hjust = 0.5)) + theme_minimal()
# Grafico de cajas
ggplot(variables, aes(x = `parental level of education`, y = Desempeño, fill = `parental level of education`, colour = lunch)) +
geom_boxplot() +
stat_summary(fun = "mean", geom = "point", position = position_dodge(width = 0.75)) + labs(
title = "Desempeño en función del Nivel Educativo de los Padres",
x = "Nivel Educativo de los Padres",
y = "Desempeño",
fill = "",
colour = "") + theme(
text = element_text(family = "serif"),
plot.title = element_text(hjust = 0.5),
axis.text.x = element_blank(),
legend.position = "bottom",
legend.title = element_text(hjust = 0.5)) + theme_minimal() + scale_colour_manual(values = c("standard" = "blue", "free/reduced" = "red"))
# Grafico de cajas
ggplot(variables, aes(x = `parental level of education`, y = Desempeño, fill = `parental level of education`, colour = lunch)) +
geom_boxplot() +
stat_summary(fun = "mean", geom = "point", position = position_dodge(width = 0.75)) + labs(
title = "Desempeño en función del Nivel Educativo de los Padres",
x = "Nivel Educativo de los Padres",
y = "Desempeño",
fill = "",
colour = "") + theme(
text = element_text(family = "serif"),
plot.title = element_text(hjust = 0.5),
axis.text.x = element_blank(),
legend.position = "bottom",
legend.title = element_text(hjust = 0.5)) + scale_colour_manual(values = c("standard" = "blue", "free/reduced" = "red"))
# Grafico de cajas
ggplot(variables, aes(x = `lunch`, y = `Desempeño`, fill = `lunch`)) +
geom_boxplot() +
stat_summary(fun = "mean", geom = "point") + labs(
title = "Desempeño en función de la Calidad de los Almuerzos",
x = "Almuerzo",
y = "Desempeño",
fill = "") + theme(
text = element_text(family = "serif"),
plot.title = element_text(hjust = 0.5),
axis.text.x = element_blank(),
legend.position = "bottom",
legend.title = element_text(hjust = 0.5))
Calculos_simples <- notas %>%
summarise(
Promedio = round(mean(Desempeño), 2),
Mediana = round(median(Desempeño), 2),
Varianza = round(var(Desempeño), 2),
D.Estandar = round(sd(Desempeño), 2),
CV = paste0(round(((D.Estandar / Promedio) * 100), 2), "%"),
Kurtosis = round(kurtosis(Desempeño), 2),
Simetria = round(skewness(Desempeño), 2),
Minimo = min(Desempeño),
Maximo = max(Desempeño)
)
Valor_Kurtosis <- Calculos_simples$Kurtosis  #Creacion de un dataframe que almacena el valor de kurtosis para un mejor grafico
Kurtosis_df <- data.frame(
Calculo1 = "Kurtosis",
Valor1 = Valor_Kurtosis)
Valor_Simetria <- Calculos_simples$Simetria
Simetria_df <- data.frame(
Calculo = "Simetria",
Valor2 = Valor_Simetria
)
kable(Calculos_simples,
align = "c",
caption = "Cálculo de medidas descriptivas")
#Gráfico de la kurtosis y simetria
Valores_kurtosis<- variables$Desempeño      #Selección de la variable desempeño
kurtosis_value <- round(kurtosis(Valores_kurtosis), 2)  #Calculo de la kurtosis
Kurtosis_data_frame <- data.frame(value = Valores_kurtosis)  #Creación de un data frame para usar en el grafico como X
ggplot(Kurtosis_data_frame, aes(x = value)) +
geom_histogram(aes(y = ..density..), bins = 10, fill = "lightblue", color = "black", alpha = 0.7) +
geom_density(color = "red", linewidth = 1) +
stat_function(fun = dnorm,
args = list(mean = mean(Valores_kurtosis), sd = sd(Valores_kurtosis)),
color = "blue", linetype = "dashed", size = 1) +
ggtitle(paste("Histograma sobre la simetria y kurtosis")) +
theme_minimal() +
theme(text = element_text(family = "serif"))
Calculos_simples <- notas %>%
summarise(
Promedio = round(mean(Desempeño), 2),
Mediana = round(median(Desempeño), 2),
Varianza = round(var(Desempeño), 2),
D.Estandar = round(sd(Desempeño), 2),
CV = paste0(round(((D.Estandar / Promedio) * 100), 2), "%"),
Kurtosis = round(kurtosis(Desempeño), 2),
Simetria = round(skewness(Desempeño), 2),
Minimo = min(Desempeño),
Maximo = max(Desempeño)
)
Valor_Kurtosis <- Calculos_simples$Kurtosis  #Creacion de un dataframe que almacena el valor de kurtosis para un mejor grafico
Kurtosis_df <- data.frame(
Calculo1 = "Kurtosis",
Valor1 = Valor_Kurtosis)
Valor_Simetria <- Calculos_simples$Simetria
Simetria_df <- data.frame(
Calculo = "Simetria",
Valor2 = Valor_Simetria
)
kable(Calculos_simples,
align = "c",
caption = "Cálculo de medidas descriptivas")
#Gráfico de la kurtosis y simetria
Valores_kurtosis<- variables$Desempeño      #Selección de la variable desempeño
kurtosis_value <- round(kurtosis(Valores_kurtosis), 2)  #Calculo de la kurtosis
Kurtosis_data_frame <- data.frame(value = Valores_kurtosis)  #Creación de un data frame para usar en el grafico como X
ggplot(Kurtosis_data_frame, aes(x = value)) +
geom_histogram(aes(y = ..density..), bins = 10, fill = "lightblue", color = "black", alpha = 0.7) +
geom_density(color = "red", linewidth = 1) +
stat_function(fun = dnorm,
args = list(mean = mean(Valores_kurtosis), sd = sd(Valores_kurtosis)),
color = "blue", linetype = "dashed", size = 1) +
ggtitle(paste("Histograma sobre la simetria y kurtosis")) +
theme(text = element_text(family = "serif"))
Calculos_simples <- notas %>%
summarise(
Promedio = round(mean(Desempeño), 2),
Mediana = round(median(Desempeño), 2),
Varianza = round(var(Desempeño), 2),
D.Estandar = round(sd(Desempeño), 2),
CV = paste0(round(((D.Estandar / Promedio) * 100), 2), "%"),
Kurtosis = round(kurtosis(Desempeño), 2),
Simetria = round(skewness(Desempeño), 2),
Minimo = min(Desempeño),
Maximo = max(Desempeño)
)
Valor_Kurtosis <- Calculos_simples$Kurtosis  #Creacion de un dataframe que almacena el valor de kurtosis para un mejor grafico
Kurtosis_df <- data.frame(
Calculo1 = "Kurtosis",
Valor1 = Valor_Kurtosis)
Valor_Simetria <- Calculos_simples$Simetria
Simetria_df <- data.frame(
Calculo = "Simetria",
Valor2 = Valor_Simetria
)
kable(Calculos_simples,
align = "c",
caption = "Cálculo de medidas descriptivas")
#Gráfico de la kurtosis y simetria
Valores_kurtosis<- variables$Desempeño      #Selección de la variable desempeño
kurtosis_value <- round(kurtosis(Valores_kurtosis), 2)  #Calculo de la kurtosis
Kurtosis_data_frame <- data.frame(value = Valores_kurtosis)  #Creación de un data frame para usar en el grafico como X
ggplot(Kurtosis_data_frame, aes(x = value)) +
geom_histogram(aes(y = ..density..), bins = 10, fill = "lightblue", color = "black", alpha = 0.7) +
geom_density(color = "red", linewidth = 1) +
stat_function(fun = dnorm,
args = list(mean = mean(Valores_kurtosis), sd = sd(Valores_kurtosis)),
color = "blue", linetype = "dashed", size = 1) +
ggtitle(paste("Histograma sobre la simetria y kurtosis")) + theme_minimal() +
theme(text = element_text(family = "serif"))
# Calcular intervalos
Rango = max(Desempeño) - min(Desempeño)
# Calcular intervalos
Rango = max(variables$Desempeño) - min(variables$Desempeño)
Nro_clases = 1 + log10(1000)
Intervalo_amplitud = round((Rango / Nro_clases), 0)
limites_inferiores <- seq(min(variables$Desempeño), max(variables$Desempeño), by = Intervalo_amplitud)
limites_superiores <- limites_inferiores + Intervalo_amplitud
# Crear intervalos para Desempeño
variables$Desempeño_Intervalos <- cut(variables$Desempeño,
breaks = c(9, 32, 55, 78, 100),
right = FALSE,
include.lowest = TRUE,
labels = c("[9,32]", "[32,55]", "[55,78]", "[78,100]"))
# Calcular intervalos
Rango = max(variables$Desempeño) - min(variables$Desempeño)
Nro_clases = 1 + log10(1000)
Intervalo_amplitud = round((Rango / Nro_clases), 0)
limites_inferiores <- seq(min(variables$Desempeño), max(variables$Desempeño), by = Intervalo_amplitud)
limites_superiores <- limites_inferiores + Intervalo_amplitud
cat(limites_inferiores, limites_superiores)
# Crear intervalos para Desempeño
variables$Desempeño_Intervalos <- cut(variables$Desempeño,
breaks = c(9, 32, 55, 78, 100),
right = FALSE,
include.lowest = TRUE,
labels = c("[9,32]", "[32,55]", "[55,78]", "[78,100]"))
# Calcular la tabla de frecuencias relativas
tabla_frecuencias_relativas <- prop.table(tabla_frecuenciasa, margin = 1)
tabla_frecuencias_relativas <- round(tabla_frecuencias_relativas * 100, 2)  # Convertir a porcentaje y redondear a 2 decimales
# Convertir la tabla a un data frame para formatearla
tabla_frecuencias_relativas_df <- as.data.frame.matrix(tabla_frecuencias_relativas)
# Crear la tabla formateada
kable(tabla_frecuencias_relativas_df, caption = "Frecuencias Relativas del Desempeño en Comparación al Nivel Educativo de los Padres", format = "latex", booktabs = TRUE) %>%
kable_styling(latex_options = c("striped", "hold_position"))
View(tabla_frecuencias_relativas_df)
# Calcular la tabla de frecuencias relativas
tabla_frecuencias_relativas <- prop.table(tabla_frecuenciasa, margin = 1)
tabla_frecuencias_relativas <- round(tabla_frecuencias_relativas * 100, 2)  # Convertir a porcentaje y redondear a 2 decimales
# Convertir la tabla a un data frame para formatearla
tabla_frecuencias_relativas_df <- as.data.frame.matrix(tabla_frecuencias_relativas)
# Crear la tabla formateada
kable(tabla_frecuencias_relativas_df, caption = "Frecuencias Relativas del Desempeño en Comparación al Nivel Educativo de los Padres", format = "latex", booktabs = TRUE) %>%
kable_styling(latex_options = c("striped", "hold_position"))
# Calcular la tabla de frecuencias relativas
tabla_frecuencias_relativas <- prop.table(variables$'parental level of education', variables$Desempeño_Intervalos)
tabla_frecuenciasa <- table(variables$'parental level of education', variables$Desempeño_Intervalos)
# Calcular la tabla de frecuencias relativas por fila
tabla_frecuencias_relativas <- prop.table(tabla_frecuenciasa, margin = 1)  # Frecuencias relativas por fila
tabla_frecuencias_relativas <- round(tabla_frecuencias_relativas * 100, 2)  # Convertir a porcentaje y redondear a 2 decimales
# Convertir la tabla a un data frame para formatearla
tabla_frecuencias_relativas_df <- as.data.frame.matrix(tabla_frecuencias_relativas)
# Agregar los totales por fila (márgenes)
tabla_frecuencias_relativas_df$Total <- rowSums(tabla_frecuencias_relativas_df)
# Agregar los totales por columna (márgenes)
totales_columna <- colSums(tabla_frecuencias_relativas_df)
tabla_frecuencias_relativas_df <- rbind(tabla_frecuencias_relativas_df, Total = totales_columna)
# Crear la tabla formateada
kable(tabla_frecuencias_relativas_df, caption = "Frecuencias Relativas del Desempeño en Comparación al Nivel Educativo de los Padres", format = "latex", booktabs = TRUE) %>%
kable_styling(latex_options = c("striped", "hold_position"))
View(tabla_frecuencias_relativas_df)
